{"version":3,"names":["React","useMemo","useEffect","useCallback","useContext","useAnimatedReaction","useDerivedValue","useSharedValue","State","GestureState","useProps","AnimatedValueContext","createContext","undefined","AnimatedValueProvider","children","value","useSetupAnimatedValues","useAnimatedValues","Error","props","DEFAULT_VAL","containerSize","scrollViewSize","panGestureState","UNDETERMINED","touchTranslate","rawTranslate","x","y","triggerReset","isTouchActiveNative","hasMoved","disabled","horizontalAnim","horizontal","activeIndexAnim","spacerIndexAnim","activeCellSize","activeCellOffset","scrollOffset","scrollInit","viewableIndexMin","viewableIndexMax","outerScrollOffset","outerScrollInit","cur","prev","placeholderOffset","isDraggingCell","autoScrollDistance","innerScrollDiff","outerScrollDiff","touchPositionDiff","extraTranslate","touchPositionDiffConstrained","containerMinusActiveCell","offsetRelativeToScrollTop","constrained","Math","min","max","maxTranslateNegative","maxTranslatePositive","constrainedBase","hoverAnim","dragItemOverflow","hoverOffset","isHovering","resetTouchedCell","onAnimValInit"],"sources":["animatedValueContext.tsx"],"sourcesContent":["import React, { useMemo, useEffect, useCallback, useContext } from \"react\";\nimport {\n  useAnimatedReaction,\n  useDerivedValue,\n  useSharedValue,\n} from \"react-native-reanimated\";\nimport { State as GestureState } from \"react-native-gesture-handler\";\nimport { useProps } from \"./propsContext\";\n\nconst AnimatedValueContext = React.createContext<\n  ReturnType<typeof useSetupAnimatedValues> | undefined\n>(undefined);\n\nexport default function AnimatedValueProvider({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  const value = useSetupAnimatedValues();\n  return (\n    <AnimatedValueContext.Provider value={value}>\n      {children}\n    </AnimatedValueContext.Provider>\n  );\n}\n\nexport function useAnimatedValues() {\n  const value = useContext(AnimatedValueContext);\n  if (!value) {\n    throw new Error(\n      \"useAnimatedValues must be called from within AnimatedValueProvider!\"\n    );\n  }\n  return value;\n}\n\nfunction useSetupAnimatedValues<T>() {\n  const props = useProps<T>();\n\n  const DEFAULT_VAL = useSharedValue(0);\n\n  const containerSize = useSharedValue(0);\n  const scrollViewSize = useSharedValue(0);\n\n  const panGestureState = useSharedValue<GestureState>(\n    GestureState.UNDETERMINED\n  );\n  const touchTranslate = useSharedValue(0);\n  const rawTranslate = useSharedValue({ x: 0, y: 0 });\n  const triggerReset = useSharedValue(false);\n\n  const isTouchActiveNative = useSharedValue(false);\n\n  const hasMoved = useSharedValue(0);\n  const disabled = useSharedValue(false);\n\n  const horizontalAnim = useSharedValue(!!props.horizontal);\n\n  const activeIndexAnim = useSharedValue(-1); // Index of hovering cell\n  const spacerIndexAnim = useSharedValue(-1); // Index of hovered-over cell\n\n  const activeCellSize = useSharedValue(0); // Height or width of acctive cell\n  const activeCellOffset = useSharedValue(0); // Distance between active cell and edge of container\n\n  const scrollOffset = useSharedValue(0);\n  const scrollInit = useSharedValue(0);\n\n  const viewableIndexMin = useSharedValue(0);\n  const viewableIndexMax = useSharedValue(0);\n\n  // If list is nested there may be an outer scrollview\n  const outerScrollOffset = props.outerScrollOffset || DEFAULT_VAL;\n  const outerScrollInit = useSharedValue(0);\n\n  useAnimatedReaction(\n    () => {\n      return activeIndexAnim.value;\n    },\n    (cur, prev) => {\n      if (cur !== prev && cur >= 0) {\n        scrollInit.value = scrollOffset.value;\n        outerScrollInit.value = outerScrollOffset.value;\n      }\n    },\n    [outerScrollOffset]\n  );\n\n  const placeholderOffset = useSharedValue(0);\n\n  const isDraggingCell = useDerivedValue(() => {\n    return isTouchActiveNative.value && activeIndexAnim.value >= 0;\n  }, []);\n\n  const autoScrollDistance = useDerivedValue(() => {\n    if (!isDraggingCell.value) return 0;\n    const innerScrollDiff = scrollOffset.value - scrollInit.value;\n    // If list is nested there may be an outer scroll diff\n    const outerScrollDiff = outerScrollOffset.value - outerScrollInit.value;\n\n    return innerScrollDiff + outerScrollDiff;\n  }, []);\n\n  const touchPositionDiff = useDerivedValue(() => {\n    const extraTranslate = isTouchActiveNative.value\n      ? autoScrollDistance.value\n      : 0;\n    return touchTranslate.value + extraTranslate;\n  }, []);\n\n  const touchPositionDiffConstrained = useDerivedValue(() => {\n    const containerMinusActiveCell =\n      containerSize.value - activeCellSize.value + scrollOffset.value;\n\n    const offsetRelativeToScrollTop =\n      touchPositionDiff.value + activeCellOffset.value;\n    const constrained = Math.min(\n      containerMinusActiveCell,\n      Math.max(scrollOffset.value, offsetRelativeToScrollTop)\n    );\n\n    const maxTranslateNegative = -activeCellOffset.value;\n    const maxTranslatePositive =\n      scrollViewSize.value - (activeCellOffset.value + activeCellSize.value);\n\n    // Only constrain the touch position while the finger is on the screen. This allows the active cell\n    // to snap above/below the fold once let go, if the drag ends at the top/bottom of the screen.\n    const constrainedBase = isTouchActiveNative.value\n      ? constrained - activeCellOffset.value\n      : touchPositionDiff.value;\n\n    // Make sure item is constrained to the boundaries of the scrollview\n    return Math.min(\n      Math.max(constrainedBase, maxTranslateNegative),\n      maxTranslatePositive\n    );\n  }, []);\n\n  const hoverAnim = useDerivedValue(() => {\n    if (activeIndexAnim.value < 0) return 0;\n    return props.dragItemOverflow\n      ? touchPositionDiff.value\n      : touchPositionDiffConstrained.value;\n  }, []);\n\n  const hoverOffset = useDerivedValue(() => {\n    return hoverAnim.value + activeCellOffset.value;\n  }, [hoverAnim, activeCellOffset]);\n\n  useDerivedValue(() => {\n    // Reset spacer index when we stop hovering\n    const isHovering = activeIndexAnim.value >= 0;\n    if (!isHovering && spacerIndexAnim.value >= 0) {\n      spacerIndexAnim.value = -1;\n    }\n  }, []);\n\n  // Note: this could use a refactor as it combines touch state + cell animation\n  const resetTouchedCell = useCallback(() => {\n    activeCellOffset.value = 0;\n    hasMoved.value = 0;\n  }, []);\n\n  const value = useMemo(\n    () => ({\n      activeCellOffset,\n      activeCellSize,\n      activeIndexAnim,\n      containerSize,\n      disabled,\n      horizontalAnim,\n      hoverAnim,\n      hoverOffset,\n      isDraggingCell,\n      isTouchActiveNative,\n      panGestureState,\n      placeholderOffset,\n      resetTouchedCell,\n      scrollOffset,\n      scrollViewSize,\n      spacerIndexAnim,\n      touchPositionDiff,\n      touchTranslate,\n      rawTranslate,\n      triggerReset,\n      autoScrollDistance,\n      viewableIndexMin,\n      viewableIndexMax,\n    }),\n    [\n      activeCellOffset,\n      activeCellSize,\n      activeIndexAnim,\n      containerSize,\n      disabled,\n      horizontalAnim,\n      hoverAnim,\n      hoverOffset,\n      isDraggingCell,\n      isTouchActiveNative,\n      panGestureState,\n      placeholderOffset,\n      resetTouchedCell,\n      scrollOffset,\n      scrollViewSize,\n      spacerIndexAnim,\n      touchPositionDiff,\n      touchTranslate,\n      rawTranslate,\n      triggerReset,\n      autoScrollDistance,\n      viewableIndexMin,\n      viewableIndexMax,\n    ]\n  );\n\n  useEffect(() => {\n    props.onAnimValInit?.(value);\n  }, [value]);\n\n  return value;\n}\n"],"mappings":"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"}