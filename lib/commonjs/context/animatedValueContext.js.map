{"version":3,"names":["AnimatedValueContext","React","createContext","undefined","AnimatedValueProvider","children","value","useSetupAnimatedValues","useAnimatedValues","useContext","Error","props","useProps","DEFAULT_VAL","useSharedValue","containerSize","scrollViewSize","panGestureState","GestureState","UNDETERMINED","touchTranslate","rawTranslate","x","y","triggerReset","isTouchActiveNative","hasMoved","disabled","horizontalAnim","horizontal","activeIndexAnim","spacerIndexAnim","activeCellSize","activeCellOffset","scrollOffset","scrollInit","viewableIndexMin","viewableIndexMax","outerScrollOffset","outerScrollInit","useAnimatedReaction","cur","prev","placeholderOffset","isDraggingCell","useDerivedValue","autoScrollDistance","innerScrollDiff","outerScrollDiff","touchPositionDiff","extraTranslate","touchPositionDiffConstrained","containerMinusActiveCell","offsetRelativeToScrollTop","constrained","Math","min","max","maxTranslateNegative","maxTranslatePositive","constrainedBase","hoverAnim","dragItemOverflow","hoverOffset","isHovering","resetTouchedCell","useCallback","useMemo","useEffect","onAnimValInit"],"sources":["animatedValueContext.tsx"],"sourcesContent":["import React, { useMemo, useEffect, useCallback, useContext } from \"react\";\nimport {\n  useAnimatedReaction,\n  useDerivedValue,\n  useSharedValue,\n} from \"react-native-reanimated\";\nimport { State as GestureState } from \"react-native-gesture-handler\";\nimport { useProps } from \"./propsContext\";\n\nconst AnimatedValueContext = React.createContext<\n  ReturnType<typeof useSetupAnimatedValues> | undefined\n>(undefined);\n\nexport default function AnimatedValueProvider({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  const value = useSetupAnimatedValues();\n  return (\n    <AnimatedValueContext.Provider value={value}>\n      {children}\n    </AnimatedValueContext.Provider>\n  );\n}\n\nexport function useAnimatedValues() {\n  const value = useContext(AnimatedValueContext);\n  if (!value) {\n    throw new Error(\n      \"useAnimatedValues must be called from within AnimatedValueProvider!\"\n    );\n  }\n  return value;\n}\n\nfunction useSetupAnimatedValues<T>() {\n  const props = useProps<T>();\n\n  const DEFAULT_VAL = useSharedValue(0);\n\n  const containerSize = useSharedValue(0);\n  const scrollViewSize = useSharedValue(0);\n\n  const panGestureState = useSharedValue<GestureState>(\n    GestureState.UNDETERMINED\n  );\n  const touchTranslate = useSharedValue(0);\n  const rawTranslate = useSharedValue({ x: 0, y: 0 });\n  const triggerReset = useSharedValue(false);\n\n  const isTouchActiveNative = useSharedValue(false);\n\n  const hasMoved = useSharedValue(0);\n  const disabled = useSharedValue(false);\n\n  const horizontalAnim = useSharedValue(!!props.horizontal);\n\n  const activeIndexAnim = useSharedValue(-1); // Index of hovering cell\n  const spacerIndexAnim = useSharedValue(-1); // Index of hovered-over cell\n\n  const activeCellSize = useSharedValue(0); // Height or width of acctive cell\n  const activeCellOffset = useSharedValue(0); // Distance between active cell and edge of container\n\n  const scrollOffset = useSharedValue(0);\n  const scrollInit = useSharedValue(0);\n\n  const viewableIndexMin = useSharedValue(0);\n  const viewableIndexMax = useSharedValue(0);\n\n  // If list is nested there may be an outer scrollview\n  const outerScrollOffset = props.outerScrollOffset || DEFAULT_VAL;\n  const outerScrollInit = useSharedValue(0);\n\n  useAnimatedReaction(\n    () => {\n      return activeIndexAnim.value;\n    },\n    (cur, prev) => {\n      if (cur !== prev && cur >= 0) {\n        scrollInit.value = scrollOffset.value;\n        outerScrollInit.value = outerScrollOffset.value;\n      }\n    },\n    [outerScrollOffset]\n  );\n\n  const placeholderOffset = useSharedValue(0);\n\n  const isDraggingCell = useDerivedValue(() => {\n    return isTouchActiveNative.value && activeIndexAnim.value >= 0;\n  }, []);\n\n  const autoScrollDistance = useDerivedValue(() => {\n    if (!isDraggingCell.value) return 0;\n    const innerScrollDiff = scrollOffset.value - scrollInit.value;\n    // If list is nested there may be an outer scroll diff\n    const outerScrollDiff = outerScrollOffset.value - outerScrollInit.value;\n\n    return innerScrollDiff + outerScrollDiff;\n  }, []);\n\n  const touchPositionDiff = useDerivedValue(() => {\n    const extraTranslate = isTouchActiveNative.value\n      ? autoScrollDistance.value\n      : 0;\n    return touchTranslate.value + extraTranslate;\n  }, []);\n\n  const touchPositionDiffConstrained = useDerivedValue(() => {\n    const containerMinusActiveCell =\n      containerSize.value - activeCellSize.value + scrollOffset.value;\n\n    const offsetRelativeToScrollTop =\n      touchPositionDiff.value + activeCellOffset.value;\n    const constrained = Math.min(\n      containerMinusActiveCell,\n      Math.max(scrollOffset.value, offsetRelativeToScrollTop)\n    );\n\n    const maxTranslateNegative = -activeCellOffset.value;\n    const maxTranslatePositive =\n      scrollViewSize.value - (activeCellOffset.value + activeCellSize.value);\n\n    // Only constrain the touch position while the finger is on the screen. This allows the active cell\n    // to snap above/below the fold once let go, if the drag ends at the top/bottom of the screen.\n    const constrainedBase = isTouchActiveNative.value\n      ? constrained - activeCellOffset.value\n      : touchPositionDiff.value;\n\n    // Make sure item is constrained to the boundaries of the scrollview\n    return Math.min(\n      Math.max(constrainedBase, maxTranslateNegative),\n      maxTranslatePositive\n    );\n  }, []);\n\n  const hoverAnim = useDerivedValue(() => {\n    if (activeIndexAnim.value < 0) return 0;\n    return props.dragItemOverflow\n      ? touchPositionDiff.value\n      : touchPositionDiffConstrained.value;\n  }, []);\n\n  const hoverOffset = useDerivedValue(() => {\n    return hoverAnim.value + activeCellOffset.value;\n  }, [hoverAnim, activeCellOffset]);\n\n  useDerivedValue(() => {\n    // Reset spacer index when we stop hovering\n    const isHovering = activeIndexAnim.value >= 0;\n    if (!isHovering && spacerIndexAnim.value >= 0) {\n      spacerIndexAnim.value = -1;\n    }\n  }, []);\n\n  // Note: this could use a refactor as it combines touch state + cell animation\n  const resetTouchedCell = useCallback(() => {\n    activeCellOffset.value = 0;\n    hasMoved.value = 0;\n  }, []);\n\n  const value = useMemo(\n    () => ({\n      activeCellOffset,\n      activeCellSize,\n      activeIndexAnim,\n      containerSize,\n      disabled,\n      horizontalAnim,\n      hoverAnim,\n      hoverOffset,\n      isDraggingCell,\n      isTouchActiveNative,\n      panGestureState,\n      placeholderOffset,\n      resetTouchedCell,\n      scrollOffset,\n      scrollViewSize,\n      spacerIndexAnim,\n      touchPositionDiff,\n      touchTranslate,\n      rawTranslate,\n      triggerReset,\n      autoScrollDistance,\n      viewableIndexMin,\n      viewableIndexMax,\n    }),\n    [\n      activeCellOffset,\n      activeCellSize,\n      activeIndexAnim,\n      containerSize,\n      disabled,\n      horizontalAnim,\n      hoverAnim,\n      hoverOffset,\n      isDraggingCell,\n      isTouchActiveNative,\n      panGestureState,\n      placeholderOffset,\n      resetTouchedCell,\n      scrollOffset,\n      scrollViewSize,\n      spacerIndexAnim,\n      touchPositionDiff,\n      touchTranslate,\n      rawTranslate,\n      triggerReset,\n      autoScrollDistance,\n      viewableIndexMin,\n      viewableIndexMax,\n    ]\n  );\n\n  useEffect(() => {\n    props.onAnimValInit?.(value);\n  }, [value]);\n\n  return value;\n}\n"],"mappings":"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"}